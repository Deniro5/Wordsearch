{"version":3,"sources":["components/Arrangements.js","components/words.js","components/Wordbank.js","components/Wordgrid.js","components/Home.js","components/App.js","index.js"],"names":["arrangements","size","row","column","direction","words","Wordbank","props","count","completed","wordlist","length","react_default","a","createElement","className","map","item","onClick","window","location","reload","Wordgrid","_useState","useState","_useState2","Object","slicedToArray","grid","setGrid","_useState3","_useState4","list","setList","_useState5","_useState6","mousePressed","setMousePressed","_useState7","_useState8","startPoint","setStartPoint","canvas","useRef","staticCanvas","canvasStyle","background","width","height","position","top","left","useEffect","newgrid","newwords","i","i2","push","charAt","Math","floor","random","arrangement","startrow","startcol","startCoord","wordindex","word","splice","endCoord","draw","event","recta","target","getBoundingClientRect","cx","clientX","cy","clientY","ctx","current","getContext","globalAlpha","strokeStyle","clearRect","beginPath","moveTo","lineTo","stroke","mousepress","mouseunpress","x1","y1","x2","y2","wordx1","wordy1","wordx2","wordy2","newList","toConsumableArray","checkLine","staticctx","letter","style","onMouseMoveCapture","bind","onMouseDown","onMouseUp","ref","components_Wordbank","Home","components_Wordgrid","App","components_Home","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.bcf96182.chunk.js","sourcesContent":["//direction  0: left to right 1: right to left   2: up to down  3 down to up     4: top left to bottom right  5: bottom right to top left \n\nconst arrangements = [\n    [\n        {size:6 , row: 1, column: 2, direction: 0},\n        {size:4 , row: 2, column: 9, direction: 1},\n        {size:8 , row: 3, column: 0, direction: 2},\n        {size:4 , row: 2, column: 2, direction: 4},\n        {size:5 , row: 3, column: 7, direction: 2},\n        {size:9 , row: 9, column: 12, direction: 1},\n        {size:5 , row: 3, column: 13, direction: 5},\n        {size:6 , row: 11, column: 7, direction: 0},\n        {size:3 , row: 7, column: 2, direction: 0},\n        {size:6 , row: 12, column: 4, direction: 0},\n    ],\n    [\n        {size:8 , row: 2, column: 0, direction: 2},\n        {size:4 , row: 0, column: 4, direction: 0},\n        {size:9 , row: 1, column: 1, direction: 4},\n        {size:3 , row: 13, column: 0, direction: 0},\n        {size:5 , row: 3, column: 12, direction: 5},\n        {size:5 , row: 3, column: 10, direction: 1},\n        {size:7 , row: 12, column: 6, direction: 1},\n        {size:3 , row: 10, column: 11, direction: 4},\n        {size:6, row:5, column: 3, direction: 2},\n        {size:6, row:8, column: 5, direction: 4},\n    ],\n    [\n        {size:8 , row: 2, column: 8, direction: 2},\n        {size:4 , row: 4, column: 2, direction: 0},\n        {size:6 , row: 12, column: 12, direction: 1},\n        {size:7 , row: 6, column: 6, direction: 5},\n        {size:4 , row:10, column: 5, direction: 2},\n        {size:4 , row:5, column: 10, direction: 4},\n        {size:4 , row:3, column: 10, direction: 0},\n        {size:5 , row:0, column: 4, direction: 5},\n        {size:9 , row:0, column: 13, direction: 1},\n        {size:5 , row:9, column: 1, direction: 3},\n    ],\n    [\n        {size:8 , row: 0 , column: 13, direction: 1},\n        {size:9 , row:0 , column: 3, direction: 4},\n        {size:6 , row: 3 , column: 3, direction: 2},\n        {size:3 , row:2 , column: 0, direction: 4},\n        {size:7 , row:5 , column: 1, direction: 2},\n        {size:6 , row:10 , column: 6, direction: 0},\n        {size:3 , row:5 , column: 6, direction: 4},\n        {size:5 , row:8 , column: 6, direction: 5},\n        {size:7 , row:12 , column: 11, direction: 1},\n        {size:4 , row:3 , column: 11, direction: 2},\n    ],\n]\n\nexport default arrangements;","//direction  0: left to right 1: right to left   2: up to down  3 down to up     4: top left to bottom right  5: bottom right to top left \n//first array is three letter words, last is nine letters\n\nconst words = [\n    [\"sky\", \"hat\", \"fat\" ,\"fly\", \"hit\", \"run\" , \"ran\", \"can\", \"man\",\"not\",\"you\",\"the\",\"too\",\"fun\",\"fin\",\"fan\",\"ant\",\"aim\",\"air\",\"bye\",\"buy\",\"bin\",\"can\"],\n    [\"ammo\",\"bury\",\"chat\",\"done\",\"ever\",\"goal\",\"foul\",\"hate\",\"love\",\"kiss\",\"jump\",\"mind\",\"name\",\"over\",\"aura\",\"zero\",\"your\",\"unit\",\"time\",\"seat\",\"ride\"],\n    [\"after\",\"great\",\"timer\",\"chair\",\"flame\",\"water\",\"stone\",\"sword\",\"knife\",\"write\",\"print\",\"magic\",\"level\",\"carry\",\"their\",\"plate\",\"diver\",\"pilot\",\"photo\"],\n    [\"minute\",\"binder\",\"heater\",\"hunter\",\"coffee\",\"valley\",\"drawer\",\"closet\",\"pencil\",\"window\",\"pillow\",\"handle\",\"motion\",\"sniper\",\"driver\",\"runway\",\"jacket\"],\n    [\"terrain\",\"picture\",\"garbage\",\"blanket\",\"machine\",\"musical\",\"fashion\",\"storage\",\"cushion\",\"tuesday\",\"running\",\"speaker\",\"painter\",\"luggage\",\"cologne\"],\n    [\"forklift\",\"airplane\",\"gardener\",\"magician\",\"clarinet\",\"trombone\",\"keyboard\",\"computer\",\"mattress\",\"backpack\",\"saturday\",\"baseball\",\"football\",\"illusion\",\"exchange\"],\n    [\"whirlpool\",\"furniture\",\"commotion\",\"telephone\",\"xylophone\",\"wallpaper\",\"briefcase\",\"operation\",\"wednesday\",\"cardboard\",\"negotiate\",\"emotional\",\"champagne\"]\n]\n\nexport default words;","import React from \"react\";\n\nconst Wordbank = (props) => {\n  let count = 0;\n  let completed = true;\n  while (count < props.wordlist.length) {\n    //Check if the wordsearch has been completed\n    if (!props.wordlist[count][3]) {\n      completed = false;\n      break;\n    }\n    count++;\n  }\n\n  return (\n    <div className='wordBankContainer'>\n      <h2> Word Bank</h2>\n      {props.wordlist.map((item) => (\n        <p className={item[3] ? \"found\" : \"\"}> {item[0]} </p>\n      ))}\n      {completed && (\n        <button\n          onClick={() => {\n            window.location.reload();\n          }}>\n          Play Again\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Wordbank;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport arrangements from \"./Arrangements\";\nimport words from \"./words\";\nimport Wordbank from \"./Wordbank\";\n\nconst Wordgrid = () => {\n  const [grid, setGrid] = useState([]);\n  const [list, setList] = useState([]);\n  const [mousePressed, setMousePressed] = useState(false);\n  const [startPoint, setStartPoint] = useState([]);\n  const canvas = useRef(null);\n  const staticCanvas = useRef(null);\n  const canvasStyle = {\n    background: \"\",\n    width: \"500px\",\n    height: \"500px\",\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  };\n\n  const randomChar = () => {\n    let characters = \"abcdefghijklmnopqrstuvwxyz\";\n    return characters.charAt(Math.floor(Math.random() * characters.length));\n  };\n\n  useEffect(() => {\n    let newgrid = [];\n    let newwords = [];\n    for (let i = 0; i < 14; i++) {\n      //populate grid with random characters first\n      let row = [];\n      for (let i2 = 0; i2 < 14; i2++) {\n        row.push([randomChar(), \"\"]);\n      }\n      newgrid.push(row);\n    }\n    const arrangement = arrangements[Math.floor(Math.random() * arrangements.length)]; //Choose predefined arrangement\n    for (let i = 0; i < arrangement.length; i++) {\n      //insert the words in the grid\n      let startrow = arrangement[i].row;\n      let startcol = arrangement[i].column;\n      let startCoord = [20 + startcol * 35, 20 + startrow * 35];\n      let wordlist = words[arrangement[i].size - 3];\n      let wordindex = Math.floor(Math.random() * wordlist.length);\n      let word = wordlist[wordindex]; //select random word of specific size\n      wordlist.splice(wordindex, 1);\n      let count = 0;\n      while (count < arrangement[i].size) {\n        newgrid[startrow][startcol] = word.charAt(count);\n        count++;\n        if (count < arrangement[i].size) {\n          if (arrangement[i].direction === 0) {\n            startcol++;\n          } else if (arrangement[i].direction === 1) {\n            startcol--;\n          } else if (arrangement[i].direction === 2) {\n            startrow++;\n          } else if (arrangement[i].direction === 3) {\n            startrow--;\n          } else if (arrangement[i].direction === 4) {\n            startrow++;\n            startcol++;\n          } else {\n            startrow++;\n            startcol--;\n          }\n        }\n      }\n      let endCoord = [20 + startcol * 35, 20 + startrow * 35];\n      newwords.push([word, startCoord, endCoord, false]);\n    }\n    setGrid(newgrid);\n    setList(newwords);\n  }, []);\n\n  const checkLine = (x1, y1, x2, y2) => {\n    let count = 0;\n    while (count < list.length) {\n      let word = list[count];\n      if (!word[3]) {\n        //only check if word hasnt been found\n        let wordx1 = word[1][0];\n        let wordy1 = word[1][1];\n        let wordx2 = word[2][0];\n        let wordy2 = word[2][1];\n        //check if the drawn line matches the position of any of the words\n        if (\n          (x1 < wordx1 + 10 &&\n            x1 > wordx1 - 10 &&\n            (x2 < wordx2 + 10 && x2 > wordx2 - 10) &&\n            (y2 < wordy2 + 10 && y2 > wordy2 - 10) &&\n            (y2 < wordy2 + 10 && y2 > wordy2 - 10)) ||\n          (x1 < wordx2 + 10 &&\n            x1 > wordx2 - 10 &&\n            (x2 < wordx1 + 10 && x2 > wordx1 - 10) &&\n            (y1 < wordy2 + 10 && y1 > wordy2 - 10) &&\n            (y2 < wordy1 + 10 && y2 > wordy1 - 10))\n        ) {\n          let newList = [...list];\n          newList[count][3] = true; //mark word as found\n          setList(newList);\n          return true;\n        }\n      }\n      count++;\n    }\n    return false;\n  };\n\n  const draw = (event) => {\n    if (mousePressed) {\n      var recta = event.target.getBoundingClientRect();\n      var cx = event.clientX - recta.left; //x position within the element.\n      var cy = event.clientY - recta.top; //y position within the element.\n      const ctx = canvas.current.getContext(\"2d\");\n      ctx.globalAlpha = 0.5;\n      ctx.strokeStyle = \"#C2C5CC\";\n      ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\n      ctx.beginPath();\n      var count = 0;\n      while (count < 1) {\n        ctx.moveTo(startPoint[0] + count, startPoint[1] + count); //add thickness to the line\n        ctx.lineTo(cx + count, cy + count);\n        ctx.stroke();\n        ctx.moveTo(startPoint[0] - count, startPoint[1] - count); //add thickness to the line\n        ctx.lineTo(cx - count, cy - count);\n        ctx.stroke();\n        count++;\n      }\n    }\n  };\n\n  const mousepress = (event) => {\n    var recta = event.target.getBoundingClientRect();\n    var cx = event.clientX - recta.left; //x position within the element.\n    var cy = event.clientY - recta.top; //y position within the element.\n    setStartPoint([cx, cy]);\n    setMousePressed(true);\n  };\n\n  const mouseunpress = (event) => {\n    var recta = event.target.getBoundingClientRect();\n    var cx = event.clientX - recta.left; //x position within the element.\n    var cy = event.clientY - recta.top; //y position within the element\n    const result = checkLine(startPoint[0], startPoint[1], cx, cy); //check if the line that we drew corresponds to a word\n    if (result) {\n      //We will have to draw this line on another canvas if theres a match\n      var count = 0;\n      const staticctx = staticCanvas.current.getContext(\"2d\");\n      staticctx.strokeStyle = \"#458B00\";\n      while (count < 1) {\n        staticctx.moveTo(startPoint[0] + count, startPoint[1] + count); //add thickness to the line\n        staticctx.lineTo(cx + count, cy + count);\n        staticctx.stroke();\n        staticctx.moveTo(startPoint[0] - count, startPoint[1] - count); //add thickness to the line\n        staticctx.lineTo(cx - count, cy - count);\n        staticctx.stroke();\n        count++;\n      }\n    }\n    const ctx = canvas.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height); //clear the canvas\n    setMousePressed(false);\n  };\n\n  if (grid.length === 0) {\n    return <p> loading</p>;\n  }\n\n  return (\n    <div>\n      <div className='wordGridContainer'>\n        {grid.map((row) => row.map((letter) => <p> {letter} </p>))}\n        <canvas\n          style={canvasStyle}\n          onMouseMoveCapture={draw.bind(this)}\n          onMouseDown={mousepress}\n          onMouseUp={mouseunpress}\n          ref={canvas}\n          width={500}\n          height={500}\n        />\n        <canvas\n          style={canvasStyle}\n          onMouseMoveCapture={draw.bind(this)}\n          onMouseDown={mousepress}\n          onMouseUp={mouseunpress}\n          ref={staticCanvas}\n          width={500}\n          height={500}\n        />\n      </div>\n      <Wordbank wordlist={list} />\n    </div>\n  );\n};\n\nexport default Wordgrid;\n","import React from 'react';\nimport Wordgrid from './Wordgrid';\n\nconst Home = props => {\n\n  return (\n    <div className=\"homeContainer\">\n      <Wordgrid/>\n    </div>\n  );\n}\n\n\nexport default Home;\n\n\n","import React, { Component } from 'react';\nimport Home from './Home'\nimport '../scss/app.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Home/>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}